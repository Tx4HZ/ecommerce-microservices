name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_REPOSITORY: ${{ vars.DOCKER_HUB_REPOSITORY || 'ecommerce-platform' }}
  SERVICES_DIR: ./services

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Find and build services
      run: |
        for service_dir in ${{ env.SERVICES_DIR }}/*; do
          if [ -f "$service_dir/build.gradle" ]; then
            echo "Building service in $service_dir"
            cd "$service_dir" && ./gradlew build
          fi
        done
      
    - name: Upload code coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-reports
        path: ${{ env.SERVICES_DIR }}/*/build/reports/
        retention-days: 7

  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push services
      run: |
        for service_dir in ${{ env.SERVICES_DIR }}/*; do
          if [ -f "$service_dir/build.gradle" ]; then
            service_name=$(basename "$service_dir")
            echo "Building Docker image for $service_name"
            docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}-${service_name}:latest "$service_dir"
            docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}-${service_name}:latest
          fi
        done
